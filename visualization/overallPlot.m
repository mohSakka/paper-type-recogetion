% deformationTypes = {'Normal','Reflection','Transmission','Normal Shearing',...
%     'Reflection Shearing ','Transmission Shearing','Normal Paragraph',...
%     'Reflection Paragraph','Transmission Paragraph','Normal Paragraph Shearing',...
%     'Reflection Paragraph Shearing','Transmission Paragraph Shearing',...
%     'Normal Paragraph Crumpled','Reflection Paragraph Crumpled','Transmission Paragraph Crumpled',...
%     'Normal Paragraph Crumpled & Shearing','Reflection Paragraph Crumpled & Shearing',...
%     'Transmission Paragraph Crumpled & Shearing'};
elmAcc = elm.Acc;
oselmAcc = oselm.bestAccTs;
knnAcc = knn.Acc;
qlElmAcc = qlElm.bestAccTs;
qlOSElmAcc = qlOSElm.bestAccTs;
qlKnnAcc = qlKnn.bestAccTs;
%%%%%%%%%5
deformationTypes = {'N','R','T','NS',...
    'RS ','TS','NP',...
    'RP','TP','NPS',...
    'RPS','TPS',...
    'NPC','RPC','TPC',...
    'NPC&S','RPC&S',...
    'TPC&S'};
deformationTypes2 = {'N','R','T','NC','RC','TC','NCS','RCS','TCS'};
%% input parameters
numberOfClasses = NC(num);
%% compute the overall measures
% ELM
for f = 1:4
[elm_confusionMatrix{f},elm_tableOfConfusion{f},elm_TP{f},elm_FN{f},elm_FP{f},elm_TN{f},elm_accuracy{f},...
    elm_precision{f},elm_recall{f},elm_specificity{f},elm_NPV{f},elm_f_Measure{f},elm_g_Mean{f},elm_overall{f}] = ...
CalculateMetricsMultiClass(numberOfClasses,elm.Labels{f}(index(num):end),elm.predictedLabels(:,f));
end
% OSELM
for f = 1:4
[oselm_confusionMatrix{f},oselm_tableOfConfusion{f},oselm_TP{f},oselm_FN,oselm_FP{f},oselm_TN{f},oselm_accuracy{f},...
    oselm_precision{f},oselm_recall{f},oselm_specificity{f},oselm_NPV{f},oselm_f_Measure{f},oselm_g_Mean{f},oselm_overall{f}] = ...
CalculateMetricsMultiClass(numberOfClasses,oselm.trueLabels(:,f),oselm.predictedLabels(:,f));
end
% KNN
for f = 1:4
[knn_confusionMatrix{f},knn_tableOfConfusion{f},knn_TP{f},knn_FN{f},knn_FP{f},knn_TN{f},knn_accuracy{f},...
    knn_precision{f},knn_recall{f},knn_specificity{f},knn_NPV{f},knn_f_Measure{f},knn_g_Mean{f},knn_overall{f}] = ...
CalculateMetricsMultiClass(numberOfClasses,knn.trueLabels{f},knn.predictedLabels(:,f));
end
% QL-ELM
[qlelm_confusionMatrix,qlelm_tableOfConfusion,qlelm_TP,qlelm_FN,qlelm_FP,qlelm_TN,qlelm_accuracy,...
    qlelm_precision,qlelm_recall,qlelm_specificity,qlelm_NPV,qlelm_f_Measure,qlelm_g_Mean,qlelm_overall] = ...
CalculateMetricsMultiClass(numberOfClasses,qlElm.trueLabels,qlElm.predictedLabels);
% QL-OSELM
[qloselm_confusionMatrix,qloselm_tableOfConfusion,qloselm_TP,qloselm_FN,qloselm_FP,qloselm_TN,qloselm_accuracy,...
    qloselm_precision,qloselm_recall,qloselm_specificity,qloselm_NPV,qloselm_f_Measure,qloselm_g_Mean,qloselm_overall] = ...
CalculateMetricsMultiClass(numberOfClasses,qlOSElm.trueLabels,qlOSElm.predictedLabels);
% QL-KNN
[qlknn_confusionMatrix,qlknn_tableOfConfusion,qlknn_TP,qlknn_FN,qlknn_FP,qlknn_TN,qlknn_accuracy,...
    qlknn_precision,qlknn_recall,qlknn_specificity,qlknn_NPV,qlknn_f_Measure,qlknn_g_Mean,qlknn_overall] = ...
CalculateMetricsMultiClass(numberOfClasses,qlKnn.trueLabels,qlKnn.predictedLabels);
%% start visualization
xLabl = 'FeatureType';
yLabl = 'masure value';
if num~=4
lgnd = {'CLBP','Gabor','LBP','Haar','QL'};
else
    lgnd = {'Feature1','Feature2','Feature3','Feature4','QL'};
end
% elm
elmOverAllPlot;
oselmOverAllPlot;
knnOverAllPlot;

%% end